@{
    ViewData["Title"] = "Tüm Topraktarlar";
    Layout = "_LayoutTopraktar";
    var topraktarData = ViewBag.TopraktarData as List<dynamic>;
}

<link rel="stylesheet" href="~/css/topraktar-main-panel.css" asp-append-version="true" />

<style>
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 32px;
    }

    .page-title {
        font-size: 28px;
        font-weight: 700;
        color: #000a68;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .admin-badge {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        color: white;
        padding: 4px 12px;
        border-radius: 6px;
        font-size: 11px;
        font-weight: 700;
    }

    .btn-back {
        background: #f3f4f6;
        color: #374151;
        padding: 12px 24px;
        border-radius: 10px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.2s;
        border: none;
        cursor: pointer;
    }

        .btn-back:hover {
            background: #e5e7eb;
        }

    .btn-new-topraktar {
        background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
        color: white;
        padding: 12px 24px;
        border-radius: 10px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.2s;
        border: none;
        cursor: pointer;
    }

        .btn-new-topraktar:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 16px rgba(59, 130, 246, 0.3);
        }

    .search-bar {
        background: white;
        padding: 20px;
        border-radius: 12px;
        margin-bottom: 24px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .search-box {
        position: relative;
    }

        .search-box input {
            width: 100%;
            padding: 12px 16px 12px 44px;
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            font-size: 15px;
        }

    .search-icon {
        position: absolute;
        left: 16px;
        top: 50%;
        transform: translateY(-50%);
        color: #9ca3af;
    }

    .topraktars-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 20px;
    }

    .topraktar-card {
        background: white;
        border-radius: 12px;
        padding: 24px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        transition: all 0.3s;
        border: 1px solid #e5e7eb;
    }

        .topraktar-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }

    .topraktar-header {
        display: flex;
        align-items: center;
        gap: 16px;
        margin-bottom: 20px;
    }

    .topraktar-avatar {
        width: 64px;
        height: 64px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 24px;
        font-weight: 700;
        flex-shrink: 0;
    }

    .topraktar-info {
        flex: 1;
    }

    .topraktar-name {
        font-size: 18px;
        font-weight: 700;
        color: #1f2937;
        margin-bottom: 4px;
    }

    .topraktar-code {
        font-size: 12px;
        color: #6b7280;
        font-family: 'Courier New', monospace;
    }

    .contact-info {
        display: flex;
        flex-direction: column;
        gap: 8px;
        margin-bottom: 16px;
    }

    .info-row {
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 14px;
        color: #6b7280;
    }

    .info-icon {
        width: 16px;
        height: 16px;
        color: #9ca3af;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 12px;
        padding-top: 16px;
        border-top: 1px solid #e5e7eb;
    }

    .stat-item {
        text-align: center;
    }

    .stat-value {
        font-size: 20px;
        font-weight: 700;
        color: #1f2937;
        margin-bottom: 2px;
    }

    .stat-label {
        font-size: 12px;
        color: #6b7280;
    }

    .commission-badge {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        color: white;
        padding: 8px 16px;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 700;
        text-align: center;
        margin-top: 16px;
    }

    .empty-state {
        text-align: center;
        padding: 80px 20px;
        background: white;
        border-radius: 12px;
    }

    .empty-icon {
        font-size: 64px;
        margin-bottom: 16px;
        opacity: 0.5;
    }

    /* Modal Styles */
    .modal-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        z-index: 9999;
        align-items: center;
        justify-content: center;
        overflow-y: auto;
    }

        .modal-overlay.active {
            display: flex;
        }

    .modal-content {
        background: white;
        border-radius: 16px;
        padding: 32px;
        max-width: 600px;
        width: 90%;
        max-height: 90vh;
        overflow-y: auto;
        box-shadow: 0 20px 25px rgba(0, 0, 0, 0.25);
        margin: 20px;
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 24px;
    }

        .modal-header h3 {
            font-size: 20px;
            font-weight: 700;
            color: #1f2937;
            margin: 0;
        }

    .modal-close {
        background: none;
        border: none;
        font-size: 24px;
        color: #6b7280;
        cursor: pointer;
        padding: 0;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 6px;
        transition: background 0.2s;
    }

        .modal-close:hover {
            background: #f3f4f6;
        }

    .modal-body {
        margin-bottom: 24px;
    }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 16px;
    }

    .form-group {
        margin-bottom: 16px;
    }

        .form-group label {
            display: block;
            font-size: 14px;
            font-weight: 600;
            color: #374151;
            margin-bottom: 6px;
        }

        .form-group select,
        .form-group input {
            width: 100%;
            padding: 10px 14px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 14px;
            font-family: inherit;
        }

            .form-group select:focus,
            .form-group input:focus {
                outline: none;
                border-color: #000a68;
                box-shadow: 0 0 0 3px rgba(0, 10, 104, 0.1);
            }

        .form-group.full-width {
            grid-column: 1 / -1;
        }

    .modal-footer {
        display: flex;
        gap: 12px;
        justify-content: flex-end;
    }

    .btn-modal {
        padding: 10px 20px;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 600;
        border: none;
        cursor: pointer;
        transition: all 0.2s;
    }

    .btn-cancel {
        background: #f3f4f6;
        color: #374151;
    }

        .btn-cancel:hover {
            background: #e5e7eb;
        }

    .btn-save {
        background: linear-gradient(135deg, #000a68 0%, #001a88 100%);
        color: white;
    }

        .btn-save:hover {
            transform: translateY(-2px);
        }

    .alert {
        padding: 16px;
        border-radius: 10px;
        margin-bottom: 24px;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .alert-success {
        background: #d1fae5;
        color: #065f46;
        border: 1px solid #10b981;
    }

    .alert-error {
        background: #fee2e2;
        color: #991b1b;
        border: 1px solid #ef4444;
    }

    @@media (max-width: 768px) {
        .topraktars-grid

    {
        grid-template-columns: 1fr;
    }

    .form-row {
        grid-template-columns: 1fr;
    }

    .stats-grid {
        grid-template-columns: repeat(2, 1fr);
    }

    }
</style>

<div class="topraktar-main-panel">
    <div class="main-content">
        <div class="page-header">
            <div>
                <h1 class="page-title">
                    Tüm Topraktarlar
                    <span class="admin-badge">ADMIN</span>
                </h1>
                <p style="color: #6b7280;">Sistemde toplam @(topraktarData?.Count ?? 0) topraktar</p>
            </div>
            <div style="display: flex; gap: 12px;">
                <button type="button" class="btn-new-topraktar" onclick="openCreateModal()">
                    ➕ Yeni Topraktar
                </button>
                <a asp-action="Index" class="btn-back">
                    ← Dashboard'a Dön
                </a>
            </div>
        </div>

        <div class="search-bar">
            <div class="search-box">
                <svg class="search-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <circle cx="11" cy="11" r="8"></circle>
                    <path d="m21 21-4.35-4.35"></path>
                </svg>
                <input type="text" id="searchInput" placeholder="Topraktar ara (ad, email, telefon)...">
            </div>
        </div>

        @if (topraktarData != null && topraktarData.Any())
        {
            <div class="topraktars-grid" id="topraktarsGrid">
                @foreach (var item in topraktarData)
                {
                    var user = item.User as AppUser;
                    var randevuCount = (int)item.RandevuCount;
                    var satisCount = (int)item.SatisCount;
                    var totalKomisyon = (decimal)item.TotalKomisyon;
                    var totalCiro = (decimal)item.TotalCiro;
                    var referralCode = item.ReferralCode as string;
                    var usedReferralCode = item.UsedReferralCode as string;
                    var initials = $"{user.Ad?.Substring(0, 1)}{user.Soyad?.Substring(0, 1)}";

                    <div class="topraktar-card" data-search="@user.Ad @user.Soyad @user.Email @user.PhoneNumber @referralCode @usedReferralCode">
                        @if (user.LockoutEnd.HasValue && user.LockoutEnd.Value > DateTimeOffset.Now)
                        {
                            <div style="background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%); color: white; padding: 8px 12px; border-radius: 8px; font-size: 13px; font-weight: 700; text-align: center; margin-bottom: 16px; display: flex; align-items: center; justify-content: center; gap: 8px;">
                                <svg style="width: 16px; height: 16px;" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <line x1="4.93" y1="4.93" x2="19.07" y2="19.07"></line>
                                </svg>
                                DEAKTİF HESAP
                            </div>
                        }
                        <div class="topraktar-header">
                            <div class="topraktar-avatar">@initials</div>
                            <div class="topraktar-info">
                                <div class="topraktar-name">@user.Ad @user.Soyad</div>
                                <div class="topraktar-code">TRK@(user.Id)</div>
                            </div>
                        </div>

                        <div class="contact-info">
                            <div class="info-row">
                                <svg class="info-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                                    <polyline points="22,6 12,13 2,6"></polyline>
                                </svg>
                                @user.Email
                            </div>
                            @if (!string.IsNullOrEmpty(user.PhoneNumber))
                            {
                                <div class="info-row">
                                    <svg class="info-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
                                    </svg>
                                    @user.PhoneNumber
                                </div>
                            }
                            <div class="info-row">
                                <svg class="info-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
                                    <circle cx="12" cy="10" r="3"></circle>
                                </svg>
                                @user.Sehir
                            </div>
                            @if (!string.IsNullOrEmpty(usedReferralCode))
                            {
                                <div class="info-row">
                                    <svg class="info-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"></path>
                                        <line x1="7" y1="7" x2="7.01" y2="7"></line>
                                    </svg>
                                    <span style="font-family: 'Courier New', monospace; font-weight: 600; color: #3b82f6;">@usedReferralCode</span>
                                </div>
                            }
                        </div>

                        <div class="stats-grid">
                            <div class="stat-item">
                                <div class="stat-value">@randevuCount</div>
                                <div class="stat-label">Randevu</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-value">@satisCount</div>
                                <div class="stat-label">Satış</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-value">@((satisCount > 0 ? (decimal)randevuCount / satisCount * 100 : 0).ToString("F0"))%</div>
                                <div class="stat-label">Başarı</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-value">₺@totalCiro.ToString("N0")</div>
                                <div class="stat-label">Ciro</div>
                            </div>
                        </div>

                        <div class="commission-badge" style="margin-top: 16px; background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);">
                            ₺@totalCiro.ToString("N0") Ciro
                        </div>

                        <div class="commission-badge" style="margin-top: 8px; background: linear-gradient(135deg, #10b981 0%, #059669 100%);">
                            ₺@totalKomisyon.ToString("N0") Komisyon
                        </div>

                        @if (!user.LockoutEnd.HasValue || user.LockoutEnd.Value <= DateTimeOffset.Now)
                        {
                            <button class="btn-deactivate" onclick="openDeactivateModal(@user.Id, '@user.Ad @user.Soyad')" style="margin-top: 12px; width: 100%; padding: 10px; background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%); color: white; border: none; border-radius: 8px; font-weight: 600; cursor: pointer; transition: all 0.2s;">
                                🚫 Hesabı Deaktif Et
                            </button>
                        }
                        else
                        {
                            <button class="btn-reactivate" onclick="openReactivateModal(@user.Id, '@user.Ad @user.Soyad')" style="margin-top: 12px; width: 100%; padding: 10px; background: linear-gradient(135deg, #10b981 0%, #059669 100%); color: white; border: none; border-radius: 8px; font-weight: 600; cursor: pointer; transition: all 0.2s;">
                                ✅ Hesabı Aktifleştir
                            </button>
                        }
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">👥</div>
                <h3 style="color: #1f2937; margin-bottom: 8px;">Henüz topraktar yok</h3>
                <p style="color: #6b7280;">Sistemde kayıtlı topraktar bulunmuyor</p>
            </div>
        }
    </div>
</div>

<!-- Create Topraktar Modal -->
<div class="modal-overlay" id="createModal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>➕ Yeni Topraktar Ekle</h3>
            <button type="button" class="modal-close" onclick="closeCreateModal()">×</button>
        </div>
        <form asp-controller="Admin" asp-action="CreateTopraktar" method="post" id="createTopraktarForm">
            @Html.AntiForgeryToken()
            <div class="modal-body">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">
                        @TempData["SuccessMessage"]
                    </div>
                }
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-error">
                        @TempData["ErrorMessage"]
                    </div>
                }

                <div class="form-row">
                    <div class="form-group">
                        <label>Ad *</label>
                        <input type="text" name="Ad" required placeholder="Ad" maxlength="100">
                    </div>
                    <div class="form-group">
                        <label>Soyad *</label>
                        <input type="text" name="Soyad" required placeholder="Soyad" maxlength="100">
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label>Email *</label>
                        <input type="email" name="Email" required placeholder="ornek@email.com">
                    </div>
                    <div class="form-group">
                        <label>Telefon *</label>
                        <input type="tel" name="PhoneNumber" required placeholder="(5XX) XXX XX XX" id="phoneInput">
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label>Şehir *</label>
                        <input type="text" name="Sehir" required placeholder="Şehir" maxlength="100">
                    </div>
                    <div class="form-group">
                        <label>Cinsiyet *</label>
                        <select name="Cinsiyet" required>
                            <option value="">Seçin</option>
                            <option value="false">Kadın</option>
                            <option value="true">Erkek</option>
                        </select>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label>Şifre *</label>
                        <input type="password" name="Password" required placeholder="Minimum 6 karakter" minlength="6">
                    </div>
                    <div class="form-group">
                        <label>Şifre Tekrar *</label>
                        <input type="password" name="ConfirmPassword" required placeholder="Şifre tekrar" minlength="6">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-modal btn-cancel" onclick="closeCreateModal()">İptal</button>
                <button type="submit" class="btn-modal btn-save">Kaydet</button>
            </div>
        </form>
    </div>
</div>

<!-- Deactivate Topraktar Modal -->
<div class="modal-overlay" id="deactivateModal">
    <div class="modal-content" style="max-width: 500px;">
        <div class="modal-header">
            <h3>🚫 Hesabı Deaktif Et</h3>
            <button type="button" class="modal-close" onclick="closeDeactivateModal()">×</button>
        </div>
        <form asp-controller="Admin" asp-action="DeactivateTopraktar" method="post" id="deactivateForm">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" id="deactivateUserId" />
            <div class="modal-body">
                <div style="padding: 20px; background: #fee2e2; border-radius: 10px; border: 2px solid #ef4444; margin-bottom: 20px;">
                    <div style="display: flex; align-items: center; gap: 12px; margin-bottom: 12px;">
                        <svg style="width: 24px; height: 24px; color: #dc2626;" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                            <line x1="12" y1="9" x2="12" y2="13"></line>
                            <line x1="12" y1="17" x2="12.01" y2="17"></line>
                        </svg>
                        <h4 style="margin: 0; color: #991b1b; font-size: 16px;">Dikkat!</h4>
                    </div>
                    <p style="color: #7f1d1d; margin: 0; font-size: 14px; line-height: 1.5;">
                        <strong id="deactivateUserName"></strong> kullanıcısının hesabını deaktif etmek üzeresiniz.
                    </p>
                    <p style="color: #7f1d1d; margin: 8px 0 0 0; font-size: 14px; line-height: 1.5;">
                        Bu kullanıcı sisteme giriş yapamayacak ve tüm erişimleri engellenecektir.
                    </p>
                </div>
                <p style="color: #6b7280; font-size: 14px; margin: 0;">
                    Bu işlemi gerçekleştirmek istediğinizden emin misiniz?
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-modal btn-cancel" onclick="closeDeactivateModal()">İptal</button>
                <button type="button" class="btn-modal" onclick="confirmDeactivate()" style="background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%); color: white;">
                    🚫 Deaktif Et
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Reactivate Topraktar Modal -->
<div class="modal-overlay" id="reactivateModal">
    <div class="modal-content" style="max-width: 500px;">
        <div class="modal-header">
            <h3>✅ Hesabı Aktifleştir</h3>
            <button type="button" class="modal-close" onclick="closeReactivateModal()">×</button>
        </div>
        <form asp-controller="Admin" asp-action="ReactivateTopraktar" method="post" id="reactivateForm">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" id="reactivateUserId" />
            <div class="modal-body">
                <div style="padding: 20px; background: #d1fae5; border-radius: 10px; border: 2px solid #10b981; margin-bottom: 20px;">
                    <div style="display: flex; align-items: center; gap: 12px; margin-bottom: 12px;">
                        <svg style="width: 24px; height: 24px; color: #059669;" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                            <polyline points="22 4 12 14.01 9 11.01"></polyline>
                        </svg>
                        <h4 style="margin: 0; color: #065f46; font-size: 16px;">Hesap Aktifleştirme</h4>
                    </div>
                    <p style="color: #064e3b; margin: 0; font-size: 14px; line-height: 1.5;">
                        <strong id="reactivateUserName"></strong> kullanıcısının hesabını aktifleştirmek üzeresiniz.
                    </p>
                    <p style="color: #064e3b; margin: 8px 0 0 0; font-size: 14px; line-height: 1.5;">
                        Bu kullanıcı tekrar sisteme giriş yapabilecek ve tüm yetkileri geri gelecektir.
                    </p>
                </div>
                <p style="color: #6b7280; font-size: 14px; margin: 0;">
                    Bu işlemi gerçekleştirmek istediğinizden emin misiniz?
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-modal btn-cancel" onclick="closeReactivateModal()">İptal</button>
                <button type="button" class="btn-modal" onclick="confirmReactivate()" style="background: linear-gradient(135deg, #10b981 0%, #059669 100%); color: white;">
                    ✅ Aktifleştir
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    // Create Modal functions
    function openCreateModal() {
        console.log('➕ Create modal açılıyor');
        document.getElementById('createTopraktarForm').reset();
        document.getElementById('createModal').classList.add('active');
    }

    function closeCreateModal() {
        document.getElementById('createModal').classList.remove('active');
    }

    // Search functionality
    document.getElementById('searchInput')?.addEventListener('input', function(e) {
        const searchTerm = e.target.value.toLowerCase();
        const cards = document.querySelectorAll('.topraktar-card');

        cards.forEach(card => {
            const searchData = card.getAttribute('data-search').toLowerCase();
            if (searchData.includes(searchTerm)) {
                card.style.display = 'block';
            } else {
                card.style.display = 'none';
            }
        });
    });

    // Phone formatting
    document.getElementById('phoneInput')?.addEventListener('input', function(e) {
        let value = e.target.value.replace(/\D/g, '');
        if (value.length > 10) value = value.slice(0, 10);

        if (value.length > 0) {
            if (value.length <= 3) {
                value = '(' + value;
            } else if (value.length <= 6) {
                value = '(' + value.slice(0, 3) + ') ' + value.slice(3);
            } else if (value.length <= 8) {
                value = '(' + value.slice(0, 3) + ') ' + value.slice(3, 6) + ' ' + value.slice(6);
            } else {
                value = '(' + value.slice(0, 3) + ') ' + value.slice(3, 6) + ' ' + value.slice(6, 8) + ' ' + value.slice(8);
            }
        }

        e.target.value = value;
    });

    // Close modals on overlay click & ESC key
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.modal-overlay').forEach(modal => {
            modal.addEventListener('click', function (e) {
                if (e.target === this) {
                    this.classList.remove('active');
                }
            });
        });

        document.addEventListener('keydown', function (e) {
            if (e.key === 'Escape') {
                document.querySelectorAll('.modal-overlay').forEach(modal => {
                    modal.classList.remove('active');
                });
            }
        });

        // Form validation - password match
        const form = document.getElementById('createTopraktarForm');
        form?.addEventListener('submit', function(e) {
            const password = form.querySelector('input[name="Password"]').value;
            const confirmPassword = form.querySelector('input[name="ConfirmPassword"]').value;

            if (password !== confirmPassword) {
                e.preventDefault();
                alert('Şifreler eşleşmiyor!');
                return false;
            }
        });
    });

    // Deactivate Modal functions
    let deactivateUserId = null;
    let deactivateUserName = '';

    function openDeactivateModal(userId, userName) {
        console.log('🚫 Deactivate modal açılıyor:', userId, userName);
        deactivateUserId = userId;
        deactivateUserName = userName;
        document.getElementById('deactivateUserName').textContent = userName;
        document.getElementById('deactivateUserId').value = userId;
        document.getElementById('deactivateModal').classList.add('active');
    }

    function closeDeactivateModal() {
        document.getElementById('deactivateModal').classList.remove('active');
        deactivateUserId = null;
        deactivateUserName = '';
    }

    function confirmDeactivate() {
        if (deactivateUserId) {
            console.log('✅ Deaktif etme onaylandı:', deactivateUserId);
            document.getElementById('deactivateForm').submit();
        }
    }

    // Reactivate Modal functions
    let reactivateUserId = null;
    let reactivateUserName = '';

    function openReactivateModal(userId, userName) {
        console.log('✅ Reactivate modal açılıyor:', userId, userName);
        reactivateUserId = userId;
        reactivateUserName = userName;
        document.getElementById('reactivateUserName').textContent = userName;
        document.getElementById('reactivateUserId').value = userId;
        document.getElementById('reactivateModal').classList.add('active');
    }

    function closeReactivateModal() {
        document.getElementById('reactivateModal').classList.remove('active');
        reactivateUserId = null;
        reactivateUserName = '';
    }

    function confirmReactivate() {
        if (reactivateUserId) {
            console.log('✅ Aktifleştirme onaylandı:', reactivateUserId);
            document.getElementById('reactivateForm').submit();
        }
    }
</script>