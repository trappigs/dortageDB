@model IEnumerable<Satis>

@{
    ViewData["Title"] = "Tüm Satışlar";
    Layout = "_LayoutTopraktar";
}

<link rel="stylesheet" href="~/css/topraktar-main-panel.css" asp-append-version="true" />

<style>
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 32px;
        flex-wrap: wrap;
        gap: 16px;
    }

    .page-title {
        font-size: 28px;
        font-weight: 700;
        color: #000a68;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .admin-badge {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        color: white;
        padding: 4px 12px;
        border-radius: 6px;
        font-size: 11px;
        font-weight: 700;
    }

    .header-actions {
        display: flex;
        gap: 12px;
        flex-wrap: wrap;
    }

    .btn-back {
        background: #f3f4f6;
        color: #374151;
        padding: 12px 24px;
        border-radius: 10px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.2s;
        border: none;
        cursor: pointer;
    }

    .btn-back:hover {
        background: #e5e7eb;
    }

    .btn-new-sale {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        color: white;
        padding: 12px 24px;
        border-radius: 10px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.2s;
        border: none;
        cursor: pointer;
    }

    .btn-new-sale:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 16px rgba(16, 185, 129, 0.3);
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 32px;
    }

    .stat-card {
        background: white;
        padding: 24px;
        border-radius: 12px;
        border: 1px solid #e5e7eb;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .stat-value {
        font-size: 32px;
        font-weight: 700;
        color: #1f2937;
        margin-bottom: 4px;
    }

    .stat-label {
        font-size: 14px;
        color: #6b7280;
    }

    .filters-bar {
        background: white;
        padding: 20px;
        border-radius: 12px;
        margin-bottom: 24px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        display: flex;
        gap: 16px;
        flex-wrap: wrap;
    }

    .filter-group {
        flex: 1;
        min-width: 200px;
    }

    .filter-group label {
        display: block;
        font-size: 13px;
        font-weight: 600;
        color: #374151;
        margin-bottom: 6px;
    }

    .filter-group select,
    .filter-group input {
        width: 100%;
        padding: 10px 14px;
        border: 2px solid #e5e7eb;
        border-radius: 8px;
        font-size: 14px;
    }

    .satislar-table {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    thead {
        background: #f9fafb;
    }

    th {
        padding: 16px;
        text-align: left;
        font-size: 14px;
        font-weight: 600;
        color: #374151;
        border-bottom: 1px solid #e5e7eb;
        cursor: pointer;
        user-select: none;
    }

    th:hover {
        background: #f3f4f6;
    }

    td {
        padding: 16px;
        font-size: 14px;
        color: #6b7280;
        border-bottom: 1px solid #f3f4f6;
    }

    tr:hover {
        background: #f9fafb;
    }

    .amount {
        font-weight: 700;
        color: #000a68;
    }

    .commission {
        font-weight: 600;
        color: #10b981;
    }

    .taksit-badge {
        padding: 4px 8px;
        border-radius: 6px;
        font-size: 11px;
        font-weight: 600;
        background: #dbeafe;
        color: #1e40af;
    }

    .action-buttons {
        display: flex;
        gap: 8px;
        justify-content: center;
    }

    .btn-action {
        padding: 6px 12px;
        border-radius: 6px;
        font-size: 12px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 4px;
        transition: all 0.2s;
        border: none;
        cursor: pointer;
    }

    .btn-view {
        background: #dbeafe;
        color: #1e40af;
    }

    .btn-view:hover {
        background: #bfdbfe;
    }

    .btn-edit {
        background: #fef3c7;
        color: #92400e;
    }

    .btn-edit:hover {
        background: #fde68a;
    }

    .btn-delete {
        background: #fee2e2;
        color: #dc2626;
    }

    .btn-delete:hover {
        background: #fecaca;
    }

    /* Modal Styles */
    .modal-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        z-index: 9999;
        align-items: center;
        justify-content: center;
        overflow-y: auto;
    }

    .modal-overlay.active {
        display: flex;
    }

    .modal-content {
        background: white;
        border-radius: 16px;
        padding: 32px;
        max-width: 600px;
        width: 90%;
        max-height: 90vh;
        overflow-y: auto;
        box-shadow: 0 20px 25px rgba(0, 0, 0, 0.25);
        margin: 20px;
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 24px;
    }

    .modal-header h3 {
        font-size: 20px;
        font-weight: 700;
        color: #1f2937;
        margin: 0;
    }

    .modal-close {
        background: none;
        border: none;
        font-size: 24px;
        color: #6b7280;
        cursor: pointer;
        padding: 0;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 6px;
        transition: background 0.2s;
    }

    .modal-close:hover {
        background: #f3f4f6;
    }

    .modal-body {
        margin-bottom: 24px;
    }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 16px;
    }

    .form-group {
        margin-bottom: 16px;
    }

    .form-group label {
        display: block;
        font-size: 14px;
        font-weight: 600;
        color: #374151;
        margin-bottom: 6px;
    }

    .form-group select,
    .form-group input,
    .form-group textarea {
        width: 100%;
        padding: 10px 14px;
        border: 2px solid #e5e7eb;
        border-radius: 8px;
        font-size: 14px;
        font-family: inherit;
    }

    .form-group select:focus,
    .form-group input:focus,
    .form-group textarea:focus {
        outline: none;
        border-color: #000a68;
        box-shadow: 0 0 0 3px rgba(0, 10, 104, 0.1);
    }

    .form-group.full-width {
        grid-column: 1 / -1;
    }

    .checkbox-group {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-top: 8px;
    }

    .checkbox-group input[type="checkbox"] {
        width: 18px;
        height: 18px;
        cursor: pointer;
    }

    .checkbox-group label {
        margin: 0;
        cursor: pointer;
        font-weight: 500;
    }

    .modal-footer {
        display: flex;
        gap: 12px;
        justify-content: flex-end;
    }

    .btn-modal {
        padding: 10px 20px;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 600;
        border: none;
        cursor: pointer;
        transition: all 0.2s;
    }

    .btn-cancel {
        background: #f3f4f6;
        color: #374151;
    }

    .btn-cancel:hover {
        background: #e5e7eb;
    }

    .btn-save {
        background: linear-gradient(135deg, #000a68 0%, #001a88 100%);
        color: white;
    }

    .btn-save:hover {
        transform: translateY(-2px);
    }

    .btn-confirm-delete {
        background: #dc2626;
        color: white;
    }

    .btn-confirm-delete:hover {
        background: #b91c1c;
    }

    .detail-row {
        display: flex;
        justify-content: space-between;
        padding: 12px 0;
        border-bottom: 1px solid #f3f4f6;
    }

    .detail-row:last-child {
        border-bottom: none;
    }

    .detail-label {
        font-weight: 600;
        color: #6b7280;
    }

    .detail-value {
        color: #1f2937;
        font-weight: 500;
    }

    .empty-state {
        text-align: center;
        padding: 80px 20px;
    }

    .empty-icon {
        font-size: 64px;
        margin-bottom: 16px;
        opacity: 0.5;
    }

    @@media (max-width: 768px) {
        .satislar-table {
            overflow-x: auto;
        }

        table {
            min-width: 900px;
        }

        .form-row {
            grid-template-columns: 1fr;
        }
    }
</style>

<div class="topraktar-main-panel">
    <div class="main-content">
        <div class="page-header">
            <div>
                <h1 class="page-title">
                    Tüm Satışlar
                    <span class="admin-badge">ADMIN</span>
                </h1>
                <p style="color: #6b7280;">Sistemde toplam @Model.Count() satış</p>
            </div>
            <div class="header-actions">
                <button type="button" class="btn-new-sale" onclick="openCreateModal()">
                    ➕ Yeni Satış
                </button>
                <a asp-action="Index" class="btn-back">
                    ← Dashboard'a Dön
                </a>
            </div>
        </div>

        @{
            var totalAmount = Model.Sum(s => s.ToplamSatisFiyati);
            var totalCommission = Model.Sum(s => s.OdenecekKomisyon);
            var avgSale = Model.Any() ? Model.Average(s => s.ToplamSatisFiyati) : 0;
            var taksitCount = Model.Count(s => s.Taksit);
        }

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-value">@Model.Count()</div>
                <div class="stat-label">Toplam Satış</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">₺@totalAmount.ToString("N0")</div>
                <div class="stat-label">Toplam Ciro</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">₺@totalCommission.ToString("N0")</div>
                <div class="stat-label">Toplam Komisyon</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">₺@avgSale.ToString("N0")</div>
                <div class="stat-label">Ortalama Satış</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">@taksitCount</div>
                <div class="stat-label">Taksitli Satış</div>
            </div>
        </div>

        <div class="filters-bar">
            <div class="filter-group">
                <label>Ara</label>
                <input type="text" id="searchInput" placeholder="Müşteri veya topraktar ara...">
            </div>
            <div class="filter-group">
                <label>Ödeme Tipi</label>
                <select id="paymentFilter">
                    <option value="">Tümü</option>
                    <option value="pesin">Peşin</option>
                    <option value="taksit">Taksitli</option>
                </select>
            </div>
        </div>

        @if (Model.Any())
        {
            <div class="satislar-table">
                <table id="satislarTable">
                    <thead>
                        <tr>
                            <th onclick="sortTable(0)">Satış ID</th>
                            <th onclick="sortTable(1)">Müşteri</th>
                            <th onclick="sortTable(2)">Topraktar</th>
                            <th onclick="sortTable(3)">Tarih</th>
                            <th onclick="sortTable(4)">Bölge</th>
                            <th onclick="sortTable(5)">Tutar</th>
                            <th onclick="sortTable(6)">Komisyon</th>
                            <th onclick="sortTable(7)">Ödeme</th>
                            <th style="text-align: center;">İşlemler</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var satis in Model)
                        {
                            var musteriAd = $"{satis.Musteri.Ad} {satis.Musteri.Soyad}";
                            var topraktarAd = $"{satis.Topraktar.Ad} {satis.Topraktar.Soyad}";
                            var musteriTelefon = satis.Musteri.Telefon ?? "";
                            var topraktarTelefon = satis.Topraktar.PhoneNumber ?? "";
                            var musteriAdTelefon = $"{musteriAd} ({musteriTelefon})";
                            var topraktarAdTelefon = $"{topraktarAd} ({topraktarTelefon})";
                            var tarih = satis.SatilmaTarihi.ToString("dd MMM yyyy");
                            var bolge = satis.Bolge.Replace("\"", "&quot;").Replace("'", "&#39;");
                            var tutar = satis.ToplamSatisFiyati.ToString(System.Globalization.CultureInfo.InvariantCulture);
                            var komisyon = satis.OdenecekKomisyon.ToString(System.Globalization.CultureInfo.InvariantCulture);
                            var taksit = satis.Taksit ? "true" : "false";

                            <tr data-search="@musteriAd @topraktarAd @musteriTelefon @topraktarTelefon" data-payment="@(satis.Taksit ? "taksit" : "pesin")">
                                <td><strong>#@satis.SatisID</strong></td>
                                <td>
                                    <div style="line-height: 1.4;">
                                        <strong>@musteriAd</strong><br />
                                        <span style="font-size: 12px; color: #6b7280;">(@musteriTelefon)</span>
                                    </div>
                                </td>
                                <td>
                                    <div style="line-height: 1.4;">
                                        <strong>@topraktarAd</strong><br />
                                        <span style="font-size: 12px; color: #6b7280;">(@topraktarTelefon)</span>
                                    </div>
                                </td>
                                <td>@tarih</td>
                                <td>@satis.Bolge</td>
                                <td><span class="amount">₺@satis.ToplamSatisFiyati.ToString("N2")</span></td>
                                <td><span class="commission">₺@satis.OdenecekKomisyon.ToString("N2")</span></td>
                                <td>
                                    @if (satis.Taksit)
                                    {
                                        <span class="taksit-badge">Taksitli</span>
                                    }
                                    else
                                    {
                                        <span>Peşin</span>
                                    }
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <button class="btn-action btn-view" 
                                                data-musteri="@musteriAdTelefon"
                                                data-topraktar="@topraktarAdTelefon"
                                                data-tarih="@tarih"
                                                data-bolge="@satis.Bolge"
                                                data-tutar="@tutar"
                                                data-komisyon="@komisyon"
                                                data-taksit="@taksit"
                                                onclick="openViewModalData(this)">
                                            👁️ Görüntüle
                                        </button>
                                        <button class="btn-action btn-edit" 
                                                data-id="@satis.SatisID"
                                                data-musteri-id="@satis.SatilanMusteriID"
                                                data-topraktar-id="@satis.TopraktarID"
                                                data-tarih="@satis.SatilmaTarihi.ToString("yyyy-MM-dd")"
                                                data-tutar="@tutar"
                                                data-bolge="@satis.Bolge"
                                                data-komisyon="@komisyon"
                                                data-taksit="@taksit"
                                                onclick="openEditModalData(this)">
                                            ✏️ Düzenle
                                        </button>
                                        <button class="btn-action btn-delete" 
                                                data-id="@satis.SatisID"
                                                onclick="openDeleteModalData(this)">
                                            🗑️ Sil
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">💰</div>
                <h3 style="color: #1f2937; margin-bottom: 8px;">Henüz satış yok</h3>
                <p style="color: #6b7280;">Sistemde kayıtlı satış bulunmuyor</p>
            </div>
        }
    </div>
</div>

<!-- Create Sale Modal -->
<div class="modal-overlay" id="createModal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>➕ Yeni Satış Ekle</h3>
            <button type="button" class="modal-close" onclick="closeCreateModal()">×</button>
        </div>
        <form asp-controller="Admin" asp-action="CreateSatis" method="post">
            @Html.AntiForgeryToken()
            <div class="modal-body">
                <div class="form-row">
                    <div class="form-group">
                        <label>Müşteri *</label>
                        <select name="SatilanMusteriID" required>
                            <option value="">Müşteri Seçin</option>
                            @if (ViewBag.Musteriler != null)
                            {
                                @foreach (var musteri in ViewBag.Musteriler as IEnumerable<Musteri>)
                                {
                                    <option value="@musteri.IdMusteri">@musteri.Ad @musteri.Soyad (@musteri.Telefon)</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Topraktar *</label>
                        <select name="TopraktarID" required>
                            <option value="">Topraktar Seçin</option>
                            @if (ViewBag.Topraktarlar != null)
                            {
                                @foreach (var topraktar in ViewBag.Topraktarlar as IEnumerable<AppUser>)
                                {
                                    <option value="@topraktar.Id">@topraktar.Ad @topraktar.Soyad (@topraktar.PhoneNumber)</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>Satış Tarihi *</label>
                        <input type="date" name="SatilmaTarihi" required value="@DateTime.Now.ToString("yyyy-MM-dd")">
                    </div>
                    <div class="form-group">
                        <label>Toplam Tutar (₺) *</label>
                        <input type="number" name="ToplamSatisFiyati" step="0.01" min="0" required>
                    </div>
                </div>
                <div class="form-group full-width">
                    <label>Bölge *</label>
                    <textarea name="Bolge" rows="2" maxlength="500" required></textarea>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>Komisyon (₺) *</label>
                        <input type="number" name="OdenecekKomisyon" step="0.01" min="0" required>
                    </div>
                    <div class="form-group">
                        <div class="checkbox-group" style="margin-top: 32px;">
                            <input type="checkbox" name="Taksit" id="createTaksit">
                            <label for="createTaksit">Taksitli Ödeme</label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-modal btn-cancel" onclick="closeCreateModal()">İptal</button>
                <button type="submit" class="btn-modal btn-save">Kaydet</button>
            </div>
        </form>
    </div>
</div>

<!-- View Sale Modal -->
<div class="modal-overlay" id="viewModal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>👁️ Satış Detayları</h3>
            <button type="button" class="modal-close" onclick="closeViewModal()">×</button>
        </div>
        <div class="modal-body">
            <div class="detail-row">
                <span class="detail-label">Müşteri:</span>
                <span class="detail-value" id="viewMusteri"></span>
            </div>
            <div class="detail-row">
                <span class="detail-label">Topraktar:</span>
                <span class="detail-value" id="viewTopraktar"></span>
            </div>
            <div class="detail-row">
                <span class="detail-label">Satış Tarihi:</span>
                <span class="detail-value" id="viewTarih"></span>
            </div>
            <div class="detail-row">
                <span class="detail-label">Bölge:</span>
                <span class="detail-value" id="viewBolge"></span>
            </div>
            <div class="detail-row">
                <span class="detail-label">Toplam Tutar:</span>
                <span class="detail-value" id="viewTutar" style="color: #000a68; font-weight: 700;"></span>
            </div>
            <div class="detail-row">
                <span class="detail-label">Komisyon:</span>
                <span class="detail-value" id="viewKomisyon" style="color: #10b981; font-weight: 700;"></span>
            </div>
            <div class="detail-row">
                <span class="detail-label">Ödeme Tipi:</span>
                <span class="detail-value" id="viewOdeme"></span>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn-modal btn-cancel" onclick="closeViewModal()">Kapat</button>
        </div>
    </div>
</div>

<!-- Edit Sale Modal -->
<div class="modal-overlay" id="editModal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>✏️ Satışı Düzenle</h3>
            <button type="button" class="modal-close" onclick="closeEditModal()">×</button>
        </div>
        <form asp-controller="Admin" asp-action="EditSatis" method="post">
            @Html.AntiForgeryToken()
            <div class="modal-body">
                <input type="hidden" name="SatisID" id="editSatisId">
                <div class="form-row">
                    <div class="form-group">
                        <label>Müşteri *</label>
                        <select name="SatilanMusteriID" id="editMusteriId" required>
                            <option value="">Müşteri Seçin</option>
                            @if (ViewBag.Musteriler != null)
                            {
                                @foreach (var musteri in ViewBag.Musteriler as IEnumerable<Musteri>)
                                {
                                    <option value="@musteri.IdMusteri">@musteri.Ad @musteri.Soyad (@musteri.Telefon)</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Topraktar *</label>
                        <select name="TopraktarID" id="editTopraktarId" required>
                            <option value="">Topraktar Seçin</option>
                            @if (ViewBag.Topraktarlar != null)
                            {
                                @foreach (var topraktar in ViewBag.Topraktarlar as IEnumerable<AppUser>)
                                {
                                    <option value="@topraktar.Id">@topraktar.Ad @topraktar.Soyad (@topraktar.PhoneNumber)</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>Satış Tarihi *</label>
                        <input type="date" name="SatilmaTarihi" id="editTarih" required>
                    </div>
                    <div class="form-group">
                        <label>Toplam Tutar (₺) *</label>
                        <input type="number" name="ToplamSatisFiyati" id="editTutar" step="0.01" min="0" required>
                    </div>
                </div>
                <div class="form-group full-width">
                    <label>Bölge *</label>
                    <textarea name="Bolge" id="editBolge" rows="2" maxlength="500" required></textarea>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>Komisyon (₺) *</label>
                        <input type="number" name="OdenecekKomisyon" id="editKomisyon" step="0.01" min="0" required>
                    </div>
                    <div class="form-group">
                        <div class="checkbox-group" style="margin-top: 32px;">
                            <input type="checkbox" name="Taksit" id="editTaksit">
                            <label for="editTaksit">Taksitli Ödeme</label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-modal btn-cancel" onclick="closeEditModal()">İptal</button>
                <button type="submit" class="btn-modal btn-save">Güncelle</button>
            </div>
        </form>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal-overlay" id="deleteModal">
    <div class="modal-content" style="max-width: 400px;">
        <div class="modal-header">
            <h3>🗑️ Satışı Sil</h3>
            <button type="button" class="modal-close" onclick="closeDeleteModal()">×</button>
        </div>
        <form asp-controller="Admin" asp-action="DeleteSatis" method="post">
            @Html.AntiForgeryToken()
            <div class="modal-body">
                <input type="hidden" name="id" id="deleteSatisId">
                <p style="color: #6b7280; line-height: 1.6;">
                    Bu satışı silmek istediğinizden emin misiniz? Bu işlem geri alınamaz ve tüm ilgili veriler silinecektir.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-modal btn-cancel" onclick="closeDeleteModal()">İptal</button>
                <button type="submit" class="btn-modal btn-confirm-delete">Evet, Sil</button>
            </div>
        </form>
    </div>
</div>

<script>
    console.log('✅ AllSatislar sayfası yüklendi');

    // Create Modal
    function openCreateModal() {
        console.log('➕ Create modal açılıyor');
        document.getElementById('createModal').classList.add('active');
    }

    function closeCreateModal() {
        document.getElementById('createModal').classList.remove('active');
    }

    // View Modal - DATA ATTRIBUTE İLE
    function openViewModalData(button) {
        const musteri = button.getAttribute('data-musteri');
        const topraktar = button.getAttribute('data-topraktar');
        const tarih = button.getAttribute('data-tarih');
        const bolge = button.getAttribute('data-bolge');
        const tutar = parseFloat(button.getAttribute('data-tutar'));
        const komisyon = parseFloat(button.getAttribute('data-komisyon'));
        const taksit = button.getAttribute('data-taksit') === 'true';

        console.log('👁️ View modal açılıyor');
        console.log('Musteri:', musteri);
        console.log('Topraktar:', topraktar);
        console.log('Tarih:', tarih);
        console.log('Bolge:', bolge);
        console.log('Tutar:', tutar);
        console.log('Komisyon:', komisyon);
        console.log('Taksit:', taksit);

        document.getElementById('viewMusteri').textContent = musteri;
        document.getElementById('viewTopraktar').textContent = topraktar;
        document.getElementById('viewTarih').textContent = tarih;
        document.getElementById('viewBolge').textContent = bolge;
        document.getElementById('viewTutar').textContent = '₺' + tutar.toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        document.getElementById('viewKomisyon').textContent = '₺' + komisyon.toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        document.getElementById('viewOdeme').textContent = taksit ? 'Taksitli' : 'Peşin';

        document.getElementById('viewModal').classList.add('active');
    }

    function closeViewModal() {
        document.getElementById('viewModal').classList.remove('active');
    }

    // Edit Modal - DATA ATTRIBUTE İLE
    function openEditModalData(button) {
        const id = button.getAttribute('data-id');
        const musteriId = button.getAttribute('data-musteri-id');
        const topraktarId = button.getAttribute('data-topraktar-id');
        const tarih = button.getAttribute('data-tarih');
        const tutar = button.getAttribute('data-tutar');
        const bolge = button.getAttribute('data-bolge');
        const komisyon = button.getAttribute('data-komisyon');
        const taksit = button.getAttribute('data-taksit') === 'true';

        console.log('✏️ Edit modal açılıyor - ID:', id);

        document.getElementById('editSatisId').value = id;
        document.getElementById('editMusteriId').value = musteriId;
        document.getElementById('editTopraktarId').value = topraktarId;
        document.getElementById('editTarih').value = tarih;
        document.getElementById('editTutar').value = tutar;
        document.getElementById('editBolge').value = bolge;
        document.getElementById('editKomisyon').value = komisyon;
        document.getElementById('editTaksit').checked = taksit;

        document.getElementById('editModal').classList.add('active');
    }

    function closeEditModal() {
        document.getElementById('editModal').classList.remove('active');
    }

    // Delete Modal - DATA ATTRIBUTE İLE
    function openDeleteModalData(button) {
        const id = button.getAttribute('data-id');
        console.log('🗑️ Delete modal açılıyor - ID:', id);

        document.getElementById('deleteSatisId').value = id;
        document.getElementById('deleteModal').classList.add('active');
    }

    function closeDeleteModal() {
        document.getElementById('deleteModal').classList.remove('active');
    }

    // Close modals on overlay click & ESC key
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.modal-overlay').forEach(modal => {
            modal.addEventListener('click', function (e) {
                if (e.target === this) {
                    this.classList.remove('active');
                }
            });
        });

        document.addEventListener('keydown', function (e) {
            if (e.key === 'Escape') {
                document.querySelectorAll('.modal-overlay').forEach(modal => {
                    modal.classList.remove('active');
                });
            }
        });
    });

    // Search functionality
    const searchInput = document.getElementById('searchInput');
    if (searchInput) {
        searchInput.addEventListener('input', filterTable);
    }

    // Payment filter
    const paymentFilter = document.getElementById('paymentFilter');
    if (paymentFilter) {
        paymentFilter.addEventListener('change', filterTable);
    }

    function filterTable() {
        const searchTerm = document.getElementById('searchInput').value.toLowerCase();
        const paymentFilter = document.getElementById('paymentFilter').value.toLowerCase();
        const rows = document.querySelectorAll('#satislarTable tbody tr');

        rows.forEach(row => {
            const searchData = row.getAttribute('data-search').toLowerCase();
            const payment = row.getAttribute('data-payment').toLowerCase();

            const searchMatch = !searchTerm || searchData.includes(searchTerm);
            const paymentMatch = !paymentFilter || payment === paymentFilter;

            row.style.display = (searchMatch && paymentMatch) ? '' : 'none';
        });
    }

    // Simple table sorting
    function sortTable(columnIndex) {
        const table = document.getElementById('satislarTable');
        if (!table) return;

        const tbody = table.querySelector('tbody');
        const rows = Array.from(tbody.querySelectorAll('tr'));

        rows.sort((a, b) => {
            const aValue = a.cells[columnIndex].textContent.trim();
            const bValue = b.cells[columnIndex].textContent.trim();
            return aValue.localeCompare(bValue, 'tr', { numeric: true });
        });

        rows.forEach(row => tbody.appendChild(row));
    }
</script>
```

**🔑 Yapılan Değişiklikler:**

**Satışlar Tablosunda (tbody kısmı):**
- Müşteri sütununda: İsim **bold** olarak üstte, telefon numarası küçük gri renkle altta gösteriliyor
- Topraktar sütununda: İsim **bold** olarak üstte, telefon numarası küçük gri renkle altta gösteriliyor
- `data-search` attribute'üne telefon numaraları da eklendi (arama yaparken telefon numarasına göre de arama yapılabilsin)

**Görünüm:**
```
Muhammed Hatay
(5365619652)