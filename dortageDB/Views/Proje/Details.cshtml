@model dortageDB.Entities.Proje
@{
    ViewData["Title"] = Model.ProjeAdi;
    Layout = "_LayoutFullWidth";
    var satisYuzdesi = ViewBag.SatisYuzdesi as double? ?? 0;
    var kalanParsel = ViewBag.KalanParsel as int? ?? 0;
}

<!-- Breadcrumb -->
<section class="breadcrumb-section">
    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Anasayfa</a></li>
                <li class="breadcrumb-item"><a asp-controller="Proje" asp-action="Index">Projeler</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.ProjeAdi</li>
            </ol>
        </nav>
    </div>
</section>

<!-- Proje Hero -->
<section class="proje-detail-hero">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="detail-hero-content" data-aos="fade-up">
                    <div class="hero-badges">
                        @if (satisYuzdesi >= 75)
                        {
                            <span class="hero-badge badge-hot">Hızla Tükeniyor</span>
                        }
                        @if (Model.KayitTarihi > DateTime.Now.AddDays(-30))
                        {
                            <span class="hero-badge badge-new">Yeni Proje</span>
                        }
                    </div>
                    <h1 class="detail-title">@Model.ProjeAdi</h1>
                    <div class="detail-location">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z" />
                            <circle cx="12" cy="10" r="3" />
                        </svg>
                        @Model.Konum
                        @if (!string.IsNullOrEmpty(Model.Sehir))
                        {
                            <span class="divider">•</span>
                            <span>@Model.Sehir/@Model.Ilce</span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Proje İçerik -->
<section class="proje-detail-content">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <!-- Görsel Galeri -->
                <div class="detail-gallery" data-aos="fade-up">
                    @{
                        var galeriGorselleri = new List<string>();
                        if (!string.IsNullOrEmpty(Model.GaleriGorselleri))
                        {
                            try
                            {
                                galeriGorselleri = System.Text.Json.JsonSerializer.Deserialize<List<string>>(Model.GaleriGorselleri) ?? new List<string>();
                            }
                            catch
                            {
                                // JSON parse hatası durumunda boş liste kullan
                            }
                        }

                        // Eğer galeri boşsa ve kapak görseli varsa, onu galeri olarak kullan
                        if (galeriGorselleri.Count == 0 && !string.IsNullOrEmpty(Model.KapakGorseli))
                        {
                            galeriGorselleri.Add(Model.KapakGorseli);
                        }
                    }

                    @if (galeriGorselleri.Count > 0)
                    {
                        <!-- Ana Görsel -->
                        <div class="gallery-main" data-index="0">
                            <img src="@galeriGorselleri[0]" alt="@Model.ProjeAdi" class="img-fluid">
                            <div class="gallery-overlay">
                                <button class="gallery-fullscreen-btn" onclick="openLightbox(0)">
                                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"/>
                                    </svg>
                                    Tam Ekran
                                </button>
                            </div>
                        </div>

                        <!-- Önizleme Grid (2x5) -->
                        @if (galeriGorselleri.Count > 1)
                        {
                            <div class="gallery-thumbnails">
                                @for (int i = 0; i < Math.Min(galeriGorselleri.Count, 10); i++)
                                {
                                    <div class="thumbnail-item @(i == 0 ? "active" : "")" onclick="changeMainImage(@i, '@galeriGorselleri[i]')">
                                        <img src="@galeriGorselleri[i]" alt="@Model.ProjeAdi Görsel @(i + 1)">
                                        @if (i == 9 && galeriGorselleri.Count > 10)
                                        {
                                            <div class="thumbnail-more" onclick="openLightbox(@i)">
                                                <span>+@(galeriGorselleri.Count - 10)</span>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <div class="gallery-placeholder">
                            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1">
                                <rect x="3" y="3" width="18" height="18" rx="2" ry="2" />
                                <circle cx="8.5" cy="8.5" r="1.5" />
                                <polyline points="21 15 16 10 5 21" />
                            </svg>
                            <p>Görsel Yüklenmemiş</p>
                        </div>
                    }
                </div>

                <!-- Açıklama -->
                <div class="detail-description" data-aos="fade-up" data-aos-delay="100">
                    <h2 class="section-title">Proje Hakkında</h2>
                    <p>@Model.Aciklama</p>
                </div>

                <!-- Özellikler -->
                <div class="detail-features" data-aos="fade-up" data-aos-delay="200">
                    <h2 class="section-title">Proje Özellikleri</h2>
                    <div class="features-grid">
                        <div class="feature-item">
                            <div class="feature-icon">
                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" />
                                    <polyline points="9 22 9 12 15 12 15 22" />
                                </svg>
                            </div>
                            <div class="feature-content">
                                <h4>Tapu Durumu</h4>
                                <p>@(Model.MustakilTapu ? "Müstakil Tapu" : "Hisseli Tapu")</p>
                            </div>
                        </div>

                        <div class="feature-item">
                            <div class="feature-icon">
                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" />
                                    <polyline points="14 2 14 8 20 8" />
                                    <line x1="16" y1="13" x2="8" y2="13" />
                                    <line x1="16" y1="17" x2="8" y2="17" />
                                    <polyline points="10 9 9 9 8 9" />
                                </svg>
                            </div>
                            <div class="feature-content">
                                <h4>İmar Durumu</h4>
                                <p>@(Model.Imarlimi ? "İmarlı" : "İmarsız")</p>
                            </div>
                        </div>

                        @if (Model.MinMetreKare.HasValue || Model.MaxMetreKare.HasValue || Model.MetreKare.HasValue)
                        {
                            <div class="feature-item">
                                <div class="feature-icon">
                                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z" />
                                        <polyline points="3.27 6.96 12 12.01 20.73 6.96" />
                                        <line x1="12" y1="22.08" x2="12" y2="12" />
                                    </svg>
                                </div>
                                <div class="feature-content">
                                    <h4>Arsa Büyüklüğü</h4>
                                    <p>
                                        @if (Model.MinMetreKare.HasValue && Model.MaxMetreKare.HasValue)
                                        {
                                            if (Model.MinMetreKare == Model.MaxMetreKare)
                                            {
                                                @Model.MinMetreKare.Value.ToString("N0") <text> m²</text>
                                            }
                                            else
                                            {
                                                @Model.MinMetreKare.Value.ToString("N0") <text> - </text> @Model.MaxMetreKare.Value.ToString("N0") <text> m²</text>
                                            }
                                        }
                                        else if (Model.MinMetreKare.HasValue)
                                        {
                                            @Model.MinMetreKare.Value.ToString("N0") <text> m² +</text>
                                        }
                                        else if (Model.MaxMetreKare.HasValue)
                                        {
                                            <text>Max </text> @Model.MaxMetreKare.Value.ToString("N0") <text> m²</text>
                                        }
                                        else if (Model.MetreKare.HasValue)
                                        {
                                            @Model.MetreKare.Value.ToString("N0") <text> m²</text>
                                        }
                                    </p>
                                </div>
                            </div>
                        }

                        <div class="feature-item">
                            <div class="feature-icon">
                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <rect x="1" y="4" width="22" height="16" rx="2" ry="2" />
                                    <line x1="1" y1="10" x2="23" y2="10" />
                                </svg>
                            </div>
                            <div class="feature-content">
                                <h4>Ödeme Seçenekleri</h4>
                                <p>
                                    @if (Model.TaksitImkani && Model.TakasImkani)
                                    {
                                        <span>Taksit & Takas</span>
                                    }
                                    else if (Model.TaksitImkani)
                                    {
                                        <span>Taksit İmkanı</span>
                                    }
                                    else if (Model.TakasImkani)
                                    {
                                        <span>Takas İmkanı</span>
                                    }
                                    else
                                    {
                                        <span>Peşin Ödeme</span>
                                    }
                                </p>
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(Model.Altyapi))
                        {
                            <div class="feature-item">
                                <div class="feature-icon">
                                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <polyline points="22 12 18 12 15 21 9 3 6 12 2 12" />
                                    </svg>
                                </div>
                                <div class="feature-content">
                                    <h4>Altyapı</h4>
                                    <p>@Model.Altyapi</p>
                                </div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(Model.KrediyeUygunluk))
                        {
                            <div class="feature-item">
                                <div class="feature-icon">
                                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <line x1="12" y1="1" x2="12" y2="23" />
                                        <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6" />
                                    </svg>
                                </div>
                                <div class="feature-content">
                                    <h4>Krediye Uygunluk</h4>
                                    <p>@Model.KrediyeUygunluk</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Yakınlık Bilgileri Section -->
                @if (!string.IsNullOrEmpty(Model.YakinProjeler) || !string.IsNullOrEmpty(Model.YakinBolgeler) ||
                     !string.IsNullOrEmpty(Model.UlasimBilgileri) || !string.IsNullOrEmpty(Model.SosyalTesisler))
                {
                    <div class="detail-proximity" data-aos="fade-up" data-aos-delay="300">
                        <h2 class="section-title">
                            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="width: 28px; height: 28px; margin-right: 8px;">
                                <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z" />
                                <circle cx="12" cy="10" r="3" />
                            </svg>
                            Konum ve Yakınlık Bilgileri
                        </h2>

                        <div class="proximity-grid">
                            @if (!string.IsNullOrEmpty(Model.YakinBolgeler))
                            {
                                <div class="proximity-card">
                                    <div class="proximity-icon">
                                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"/>
                                            <circle cx="12" cy="10" r="3"/>
                                        </svg>
                                    </div>
                                    <div class="proximity-content">
                                        <h4>Önemli Bölgelere Yakınlık</h4>
                                        <p>@Model.YakinBolgeler</p>
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(Model.UlasimBilgileri))
                            {
                                <div class="proximity-card">
                                    <div class="proximity-icon">
                                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <rect x="3" y="11" width="18" height="11" rx="2" ry="2"/>
                                            <path d="M7 11V7a5 5 0 0 1 10 0v4"/>
                                        </svg>
                                    </div>
                                    <div class="proximity-content">
                                        <h4>Ulaşım</h4>
                                        <p>@Model.UlasimBilgileri</p>
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(Model.SosyalTesisler))
                            {
                                <div class="proximity-card">
                                    <div class="proximity-icon">
                                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
                                            <polyline points="9 22 9 12 15 12 15 22"/>
                                        </svg>
                                    </div>
                                    <div class="proximity-content">
                                        <h4>Sosyal Tesisler</h4>
                                        <p>@Model.SosyalTesisler</p>
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(Model.YakinProjeler))
                            {
                                <div class="proximity-card">
                                    <div class="proximity-icon">
                                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"/>
                                            <polyline points="3.27 6.96 12 12.01 20.73 6.96"/>
                                            <line x1="12" y1="22.08" x2="12" y2="12"/>
                                        </svg>
                                    </div>
                                    <div class="proximity-content">
                                        <h4>Yakın Projeler</h4>
                                        <p>@Model.YakinProjeler</p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>

            <div class="col-lg-4">
                <div class="detail-quick-info" data-aos="fade-left" data-aos-delay="200">
                    <div class="price-box">
                        <span class="price-label">Fiyat Aralığı</span>
                        @if (Model.MinFiyat == Model.MaxFiyat)
                        {
                            <span class="price-value">@Model.MinFiyat.ToString("N0") ₺</span>
                        }
                        else
                        {
                            <div class="price-range-box">
                                <span class="price-value">@Model.MinFiyat.ToString("N0") ₺</span>
                                <span class="price-sep">-</span>
                                <span class="price-value">@Model.MaxFiyat.ToString("N0") ₺</span>
                            </div>
                        }
                    </div>
                    <div class="stock-box">
                        <div class="stock-progress">
                            <div class="stock-info">
                                <span>@Model.SatilanParsel / @Model.ToplamParsel Parsel</span>
                                <span class="stock-percent">%@Math.Round(satisYuzdesi, 0)</span>
                            </div>
                            <div class="progress">
                                <div class="progress-bar" style="width: @satisYuzdesi%"></div>
                            </div>
                        </div>
                        <div class="stock-remaining">@kalanParsel Parsel Kaldı</div>
                    </div>
                </div>
                @* 
                <!-- İletişim Formu -->
                <div class="detail-sidebar" data-aos="fade-left">
                    <div class="contact-card">
                        <h3 class="card-title">Bu Proje İlgileniyorum</h3>
                        <p class="card-subtitle">Bilgi almak için formu doldurun, size ulaşalım.</p>

                        <div class="contact-options">
                            @if (User.Identity?.IsAuthenticated == true)
                            {
                                <a asp-controller="Randevu" asp-action="Create" asp-route-projeId="@Model.ProjeID"
                                   class="btn btn-primary btn-block">
                                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <rect x="3" y="4" width="18" height="18" rx="2" ry="2"/>
                                        <line x1="16" y1="2" x2="16" y2="6"/>
                                        <line x1="8" y1="2" x2="8" y2="6"/>
                                        <line x1="3" y1="10" x2="21" y2="10"/>
                                    </svg>
                                    Randevu Oluştur
                                </a>
                                <a asp-controller="Musteri" asp-action="Create" asp-route-projeId="@Model.ProjeID"
                                   class="btn btn-outline btn-block">
                                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"/>
                                        <circle cx="8.5" cy="7" r="4"/>
                                        <line x1="20" y1="8" x2="20" y2="14"/>
                                        <line x1="23" y1="11" x2="17" y2="11"/>
                                    </svg>
                                    Müşteri Ekle
                                </a>
                            }
                            else
                            {
                                <a asp-controller="Account" asp-action="Login" asp-route-returnUrl="@Context.Request.Path"
                                   class="btn btn-primary btn-block">
                                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"/>
                                        <polyline points="10 17 15 12 10 7"/>
                                        <line x1="15" y1="12" x2="3" y2="12"/>
                                    </svg>
                                    Giriş Yap
                                </a>
                                <a asp-controller="Account" asp-action="Register" class="btn btn-outline btn-block">
                                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"/>
                                        <circle cx="8.5" cy="7" r="4"/>
                                        <line x1="20" y1="8" x2="20" y2="14"/>
                                        <line x1="23" y1="11" x2="17" y2="11"/>
                                    </svg>
                                    Topraktar Ol
                                </a>
                            }
                        </div>

                        <div class="contact-info">
                            <div class="info-item">
                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/>
                                </svg>
                                <span>0850 XXX XX XX</span>
                            </div>
                            <div class="info-item">
                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
                                    <polyline points="22,6 12,13 2,6"/>
                                </svg>
                                <span>info@dortage.com</span>
                            </div>
                        </div>
                    </div> *@

                <!-- Benzer Projeler -->
                <div class="similar-projects">
                    <h3 class="card-title">Benzer Projeler</h3>
                    <p class="card-subtitle">Bu projeye benzer diğer fırsatlar</p>
                    <a asp-action="Index" asp-route-sehir="@Model.Sehir" class="btn btn-outline btn-block">
                        @Model.Sehir'deki Tüm Projeler
                    </a>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Lightbox Modal -->
<div id="lightboxModal" class="lightbox-modal">
    <div class="lightbox-header">
        <span class="lightbox-counter">
            <span id="currentImageIndex">1</span> / <span id="totalImages">@galeriGorselleri.Count</span>
        </span>
        <button class="lightbox-close" onclick="closeLightbox()">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="18" y1="6" x2="6" y2="18"/>
                <line x1="6" y1="6" x2="18" y2="18"/>
            </svg>
        </button>
    </div>

    <div class="lightbox-content">
        <button class="lightbox-nav lightbox-prev" onclick="navigateLightbox(-1)">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="15 18 9 12 15 6"/>
            </svg>
        </button>

        <div class="lightbox-image-container">
            <img id="lightboxImage" src="" alt="@Model.ProjeAdi">
        </div>

        <button class="lightbox-nav lightbox-next" onclick="navigateLightbox(1)">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="9 18 15 12 9 6"/>
            </svg>
        </button>
    </div>

    <div class="lightbox-thumbnails-wrapper">
        <div class="lightbox-thumbnails" id="lightboxThumbnails">
            @for (int i = 0; i < galeriGorselleri.Count; i++)
            {
                <div class="lightbox-thumb @(i == 0 ? "active" : "")" onclick="goToImage(@i)">
                    <img src="@galeriGorselleri[i]" alt="Görsel @(i + 1)">
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <link rel="stylesheet" href="~/css/projeler.css" asp-append-version="true" />

    <script>
        AOS.init({
            duration: 600,
            easing: 'ease-in-out',
            once: true,
            offset: 50
        });

        // Galeri görselleri dizisi
        const galleryImages = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(galeriGorselleri));
        let currentLightboxIndex = 0;

        // Ana görseli değiştir
        function changeMainImage(index, imageUrl) {
            const mainImage = document.querySelector('.gallery-main img');
            const thumbnails = document.querySelectorAll('.thumbnail-item');

            mainImage.src = imageUrl;
            document.querySelector('.gallery-main').setAttribute('data-index', index);

            thumbnails.forEach((thumb, i) => {
                thumb.classList.toggle('active', i === index);
            });
        }

        // Lightbox aç
        function openLightbox(startIndex) {
            currentLightboxIndex = startIndex;
            updateLightboxImage();
            document.getElementById('lightboxModal').classList.add('active');
            document.body.style.overflow = 'hidden';
        }

        // Lightbox kapat
        function closeLightbox() {
            document.getElementById('lightboxModal').classList.remove('active');
            document.body.style.overflow = '';
        }

        // Lightbox navigasyon
        function navigateLightbox(direction) {
            currentLightboxIndex += direction;

            if (currentLightboxIndex < 0) {
                currentLightboxIndex = galleryImages.length - 1;
            } else if (currentLightboxIndex >= galleryImages.length) {
                currentLightboxIndex = 0;
            }

            updateLightboxImage();
        }

        // Belirli görsele git
        function goToImage(index) {
            currentLightboxIndex = index;
            updateLightboxImage();
        }

        // Lightbox görselini güncelle
        function updateLightboxImage() {
            const lightboxImage = document.getElementById('lightboxImage');
            const currentIndexSpan = document.getElementById('currentImageIndex');
            const thumbnails = document.querySelectorAll('.lightbox-thumb');

            lightboxImage.src = galleryImages[currentLightboxIndex];
            currentIndexSpan.textContent = currentLightboxIndex + 1;

            // Thumbnail'leri güncelle
            thumbnails.forEach((thumb, i) => {
                thumb.classList.toggle('active', i === currentLightboxIndex);
            });

            // Aktif thumbnail'i görünür yap
            const activeThumb = thumbnails[currentLightboxIndex];
            if (activeThumb) {
                activeThumb.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' });
            }
        }

        // Klavye kontrolleri
        document.addEventListener('keydown', function(e) {
            const modal = document.getElementById('lightboxModal');
            if (modal.classList.contains('active')) {
                if (e.key === 'ArrowLeft') {
                    navigateLightbox(-1);
                } else if (e.key === 'ArrowRight') {
                    navigateLightbox(1);
                } else if (e.key === 'Escape') {
                    closeLightbox();
                }
            }
        });

        // Modal dışına tıklama ile kapatma
        document.addEventListener('click', function(e) {
            const modal = document.getElementById('lightboxModal');
            if (e.target === modal) {
                closeLightbox();
            }
        });
    </script>
}
