@model IEnumerable<Satis>

@{
    ViewData["Title"] = "Satışlarım";
    Layout = "_LayoutTopraktar";
}

<link rel="stylesheet" href="~/css/topraktar-main-panel.css" asp-append-version="true" />

<style>
    .page-header {
        margin-bottom: 32px;
    }

    .page-title {
        font-size: 28px;
        font-weight: 700;
        color: #000a68;
        margin-bottom: 8px;
    }

    .page-subtitle {
        color: #6b7280;
        font-size: 16px;
    }

    /* Stats Grid */
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 32px;
    }

    .stat-card {
        background: white;
        padding: 24px;
        border-radius: 12px;
        border: 1px solid #e5e7eb;
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .stat-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

    .stat-label {
        font-size: 13px;
        color: #6b7280;
        margin-bottom: 8px;
        font-weight: 500;
    }

    .stat-value {
        font-size: 28px;
        font-weight: 700;
        color: #1f2937;
    }

        .stat-value.blue {
            color: #000a68;
        }

        .stat-value.green {
            color: #10b981;
        }

        .stat-value.orange {
            color: #f59e0b;
        }

    .stat-change {
        font-size: 13px;
        color: #10b981;
        margin-top: 4px;
        display: flex;
        align-items: center;
        gap: 4px;
    }

    /* Filters */
    .filters-bar {
        background: white;
        padding: 20px;
        border-radius: 12px;
        margin-bottom: 24px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        display: flex;
        gap: 16px;
        flex-wrap: wrap;
    }

    .filter-group {
        flex: 1;
        min-width: 200px;
    }

        .filter-group label {
            display: block;
            font-size: 13px;
            font-weight: 600;
            color: #374151;
            margin-bottom: 6px;
        }

        .filter-group select,
        .filter-group input {
            width: 100%;
            padding: 10px 14px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 14px;
        }

    /* Sales Cards Grid */
    .sales-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 20px;
    }

    .sale-card {
        background: white;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        border-left: 4px solid #000a68;
        transition: all 0.2s;
    }

        .sale-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }

    .sale-card-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 16px;
    }

    .sale-id {
        font-size: 14px;
        font-weight: 700;
        color: #000a68;
        background: #f0f4ff;
        padding: 6px 12px;
        border-radius: 6px;
    }

    .sale-date {
        font-size: 13px;
        color: #6b7280;
    }

    .customer-info {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .customer-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        font-size: 14px;
        flex-shrink: 0;
    }

    .customer-details {
        flex: 1;
    }

    .customer-name {
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 2px;
    }

    .customer-phone {
        font-size: 12px;
        color: #9ca3af;
    }

    .sale-info-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 16px;
        margin: 16px 0;
        padding: 16px;
        background: #f9fafb;
        border-radius: 8px;
    }

    .sale-info-item {
        display: flex;
        flex-direction: column;
        gap: 4px;
    }

    .sale-info-label {
        font-size: 12px;
        color: #6b7280;
        font-weight: 500;
    }

    .sale-info-value {
        font-size: 16px;
        font-weight: 700;
        color: #1f2937;
    }

    .amount {
        font-weight: 700;
        color: #000a68;
        font-size: 16px;
    }

    .commission {
        font-weight: 700;
        color: #10b981;
        font-size: 16px;
    }

    .region-badge {
        display: inline-flex;
        align-items: center;
        gap: 4px;
        padding: 4px 10px;
        background: #f3f4f6;
        border-radius: 6px;
        font-size: 13px;
        font-weight: 600;
        color: #374151;
    }

    .sale-card-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 16px;
        padding-top: 16px;
        border-top: 1px solid #f3f4f6;
    }

    .payment-badge {
        padding: 4px 10px;
        border-radius: 6px;
        font-size: 12px;
        font-weight: 600;
    }

    .payment-taksit {
        background: #dbeafe;
        color: #1e40af;
    }

    .payment-pesin {
        background: #d1fae5;
        color: #065f46;
    }

    .btn-view {
        padding: 8px 16px;
        background: #dbeafe;
        color: #1e40af;
        border: none;
        border-radius: 8px;
        font-size: 13px;
        font-weight: 600;
        cursor: pointer;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 6px;
        transition: all 0.2s;
    }

        .btn-view:hover {
            background: #bfdbfe;
            transform: translateY(-2px);
        }

    .empty-state {
        text-align: center;
        padding: 80px 20px;
        background: white;
        border-radius: 12px;
    }

    .empty-icon {
        font-size: 64px;
        margin-bottom: 16px;
        opacity: 0.5;
    }

    /* Info Banner */
    .info-banner {
        background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
        padding: 16px 20px;
        border-radius: 12px;
        margin-bottom: 24px;
        display: flex;
        align-items: center;
        gap: 12px;
        color: #1e40af;
        font-size: 14px;
    }

        .info-banner svg {
            width: 20px;
            height: 20px;
            flex-shrink: 0;
            stroke: currentColor;
            fill: none;
            stroke-width: 2;
        }

    @@media (max-width: 768px) {
        .stats-grid {
            grid-template-columns: 1fr;
        }

        .sales-grid {
            grid-template-columns: 1fr;
        }

        .filter-group {
            min-width: 100%;
        }

        .sale-info-grid {
            grid-template-columns: 1fr;
            gap: 12px;
        }
    }
</style>

<div class="topraktar-main-panel">
    <div class="main-content">
        <div class="page-header">
            <h1 class="page-title">💰 Satışlarım</h1>
            <p class="page-subtitle">Tüm satış kayıtlarınızı görüntüleyin</p>
        </div>

        <!-- Info Banner -->
        <div class="info-banner">
            <svg viewBox="0 0 24 24">
                <circle cx="12" cy="12" r="10"></circle>
                <line x1="12" y1="16" x2="12" y2="12"></line>
                <line x1="12" y1="8" x2="12.01" y2="8"></line>
            </svg>
            <span>Satış kayıtları yalnızca yönetici tarafından eklenebilir. Satış yaptığınızda lütfen yöneticinize bilgi verin.</span>
        </div>

        <!-- Stats Grid -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-label">Toplam Satış</div>
                <div class="stat-value blue">@ViewBag.TotalSales</div>
            </div>
            <div class="stat-card">
                <div class="stat-label">Toplam Ciro</div>
                <div class="stat-value">₺@ViewBag.TotalRevenue.ToString("N0")</div>
            </div>
            <div class="stat-card">
                <div class="stat-label">Toplam Komisyon</div>
                <div class="stat-value green">₺@ViewBag.TotalCommission.ToString("N0")</div>
            </div>
            <div class="stat-card">
                <div class="stat-label">Ortalama Satış</div>
                <div class="stat-value">₺@ViewBag.AvgSaleValue.ToString("N0")</div>
            </div>
            <div class="stat-card">
                <div class="stat-label">Bu Ay Satış</div>
                <div class="stat-value blue">@ViewBag.ThisMonthSales</div>
                <div class="stat-change">
                    ↑ ₺@ViewBag.ThisMonthRevenue.ToString("N0")
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-label">Ödeme Tipi</div>
                <div class="stat-value orange">@ViewBag.TaksitCount Taksit</div>
                <div class="stat-change" style="color: #6b7280;">
                    @ViewBag.PesinCount Peşin
                </div>
            </div>
        </div>

        <!-- Filters -->
        <div class="filters-bar">
            <div class="filter-group">
                <label>Ara</label>
                <input type="text" id="searchInput" placeholder="Müşteri ara...">
            </div>
            <div class="filter-group">
                <label>Ödeme Tipi</label>
                <select id="paymentFilter">
                    <option value="">Tümü</option>
                    <option value="pesin">Peşin</option>
                    <option value="taksit">Taksitli</option>
                </select>
            </div>
            <div class="filter-group">
                <label>Tarih Aralığı</label>
                <select id="dateFilter">
                    <option value="">Tümü</option>
                    <option value="today">Bugün</option>
                    <option value="week">Bu Hafta</option>
                    <option value="month">Bu Ay</option>
                    <option value="year">Bu Yıl</option>
                </select>
            </div>
        </div>

        <!-- Sales Cards Grid -->
        @if (Model.Any())
        {
            <div class="sales-grid">
                @foreach (var satis in Model)
                {
                    var initials = $"{satis.Musteri.Ad.Substring(0, 1)}{satis.Musteri.Soyad.Substring(0, 1)}";
                    var customerName = $"{satis.Musteri.Ad} {satis.Musteri.Soyad}";
                    var saleDate = satis.SatilmaTarihi;
                    var paymentType = satis.Taksit ? "taksit" : "pesin";

                    <div class="sale-card"
                         data-search="@customerName"
                         data-payment="@paymentType"
                         data-date="@saleDate.ToString("yyyy-MM-dd")">

                        <!-- Card Header -->
                        <div class="sale-card-header">
                            <span class="sale-id">#@satis.SatisID</span>
                            <span class="sale-date">@saleDate.ToString("dd MMM yyyy")</span>
                        </div>

                        <!-- Customer Info -->
                        <div class="customer-info">
                            <div class="customer-avatar">@initials</div>
                            <div class="customer-details">
                                <div class="customer-name">@customerName</div>
                                <div class="customer-phone">@satis.Musteri.Telefon</div>
                            </div>
                        </div>

                        <!-- Sale Info Grid -->
                        <div class="sale-info-grid">
                            <div class="sale-info-item">
                                <span class="sale-info-label">Tutar</span>
                                <span class="amount">₺@satis.ToplamSatisFiyati.ToString("N2")</span>
                            </div>
                            <div class="sale-info-item">
                                <span class="sale-info-label">Komisyon</span>
                                <span class="commission">₺@satis.OdenecekKomisyon.ToString("N2")</span>
                            </div>
                            <div class="sale-info-item">
                                <span class="sale-info-label">Bölge</span>
                                <span class="region-badge">📍 @satis.Bolge</span>
                            </div>
                            <div class="sale-info-item">
                                <span class="sale-info-label">Ödeme</span>
                                <span class="payment-badge payment-@paymentType">
                                    @(satis.Taksit ? "💳 Taksitli" : "💵 Peşin")
                                </span>
                            </div>
                        </div>

                        <!-- Card Footer -->
                        <div class="sale-card-footer">
                            <a asp-action="Details" asp-route-id="@satis.SatisID" class="btn-view">
                                👁️ Detay Görüntüle
                            </a>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">📊</div>
                <h3 style="color: #1f2937; margin-bottom: 8px;">Henüz satış kaydınız yok</h3>
                <p style="color: #6b7280;">Satış yaptığınızda kayıtlar burada görünecek</p>
            </div>
        }
    </div>
</div>

<script>
    // Filter functionality
    const searchInput = document.getElementById('searchInput');
    const paymentFilter = document.getElementById('paymentFilter');
    const dateFilter = document.getElementById('dateFilter');
    const saleCards = document.querySelectorAll('.sale-card');

    function filterCards() {
        const searchTerm = searchInput?.value.toLowerCase() || '';
        const paymentType = paymentFilter?.value.toLowerCase() || '';
        const dateRange = dateFilter?.value || '';

        const today = new Date();
        today.setHours(0, 0, 0, 0);

        saleCards.forEach(card => {
            const searchData = card.getAttribute('data-search').toLowerCase();
            const payment = card.getAttribute('data-payment');
            const dateStr = card.getAttribute('data-date');
            const cardDate = new Date(dateStr);

            // Search filter
            const searchMatch = !searchTerm || searchData.includes(searchTerm);

            // Payment filter
            const paymentMatch = !paymentType || payment === paymentType;

            // Date filter
            let dateMatch = true;
            if (dateRange === 'today') {
                dateMatch = cardDate.toDateString() === today.toDateString();
            } else if (dateRange === 'week') {
                const weekAgo = new Date(today);
                weekAgo.setDate(today.getDate() - 7);
                dateMatch = cardDate >= weekAgo;
            } else if (dateRange === 'month') {
                dateMatch = cardDate.getMonth() === today.getMonth() &&
                           cardDate.getFullYear() === today.getFullYear();
            } else if (dateRange === 'year') {
                dateMatch = cardDate.getFullYear() === today.getFullYear();
            }

            card.style.display = (searchMatch && paymentMatch && dateMatch) ? '' : 'none';
        });
    }

    searchInput?.addEventListener('input', filterCards);
    paymentFilter?.addEventListener('change', filterCards);
    dateFilter?.addEventListener('change', filterCards);
</script>