@using dortageDB.Entities
@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Topraktar Dashboard</title>
    <link rel="icon" type="image/png" href="~/images/favicon-logo.png" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/topraktar-main-panel.css" asp-append-version="true" />

    <style>
        /* Alert Styles */
        .alert {
            padding: 16px 20px;
            border-radius: 10px;
            margin-bottom: 24px;
            display: flex;
            align-items: center;
            gap: 12px;
            font-size: 15px;
            animation: slideIn 0.3s ease;
        }

        .alert-success {
            background: #d1fae5;
            color: #065f46;
            border: 1px solid #10b981;
        }

        .alert-error {
            background: #fee2e2;
            color: #991b1b;
            border: 1px solid #ef4444;
        }

        .alert-info {
            background: #dbeafe;
            color: #1e40af;
            border: 1px solid #3b82f6;
        }

        .alert-warning {
            background: #fef3c7;
            color: #92400e;
            border: 1px solid #f59e0b;
        }

        @@keyframes slideIn {
            from

        {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        /* Page Loading Overlay */
        .page-loading {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.9);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 9999;
        }

            .page-loading.active {
                display: flex;
            }

        .loading-spinner {
            width: 48px;
            height: 48px;
            border: 4px solid #e5e7eb;
            border-top-color: #000a68;
            border-radius: 50%;
            animation: spin 0.8s linear infinite;
        }

        @@keyframes spin {
            to

        {
            transform: rotate(360deg);
        }

        }

        /* Custom Scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f3f4f6;
        }

        ::-webkit-scrollbar-thumb {
            background: #9ca3af;
            border-radius: 4px;
        }

            ::-webkit-scrollbar-thumb:hover {
                background: #6b7280;
            }

        /* Body styles */
        body {
            margin: 0;
            padding: 0;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background: #f9fafb;
            overflow-x: hidden;
        }

        /* Top Navbar */
        .top-navbar {
            position: fixed;
            top: 0;
            left: 280px;
            right: 0;
            height: 70px;
            background: white;
            border-bottom: 1px solid #e5e7eb;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 32px;
            z-index: 100;
            transition: left 0.3s ease;
        }

        .sidebar.collapsed ~ .top-navbar {
            left: 80px;
        }

        .top-navbar-left {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .top-navbar-logo {
            display: flex;
            align-items: center;
            gap: 12px;
            text-decoration: none;
            color: #000a68;
            font-weight: 700;
            font-size: 18px;
            transition: opacity 0.2s;
        }

        .top-navbar-logo:hover {
            opacity: 0.8;
        }

        .top-navbar-logo img {
            height: 35px;
            width: auto;
        }

        .top-navbar-right {
            display: flex;
            align-items: center;
            gap: 16px;
        }

        .navbar-link {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 8px 16px;
            border-radius: 8px;
            text-decoration: none;
            color: #6b7280;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.2s;
        }

        .navbar-link:hover {
            background: #f3f4f6;
            color: #000a68;
        }

        .navbar-link svg {
            width: 18px;
            height: 18px;
            stroke: currentColor;
            fill: none;
            stroke-width: 2;
        }

        /* Adjust main content for navbar */
        .main-content {
            margin-top: 45px;
        }

        /* Mobile navbar */
        @@media (max-width: 768px) {
            .top-navbar {
                left: 0;
                padding: 0 12px;
                height: 60px;
            }

            .mobile-menu-btn {
                display: flex !important;
            }

            .top-navbar-logo {
                font-size: 14px;
            }

            .top-navbar-logo img {
                height: 28px;
            }

            .top-navbar-logo span {
                display: none;
            }

            .navbar-link {
                padding: 6px 8px;
                font-size: 12px;
                gap: 4px;
            }

            .navbar-link span {
                display: none;
            }

            .navbar-link svg {
                width: 22px;
                height: 22px;
            }

            .top-navbar-right {
                gap: 4px;
            }

            .main-content {
                margin-top: 5px;
            }
        }
    </style>
</head>
<body class="topraktar-main-panel">
    <!-- Page Loading Overlay -->
    <div class="page-loading" id="pageLoading">
        <div class="loading-spinner"></div>
    </div>

    <!-- Top Navbar -->
    <nav class="top-navbar">
        <div class="top-navbar-left">
            <!-- Mobile Menu Button -->
            <button class="mobile-menu-btn" id="mobileMenuBtn" aria-label="Menüyü aç">
                <svg viewBox="0 0 24 24">
                    <line x1="3" y1="12" x2="21" y2="12"></line>
                    <line x1="3" y1="6" x2="21" y2="6"></line>
                    <line x1="3" y1="18" x2="21" y2="18"></line>
                </svg>
            </button>
            <a asp-controller="Home" asp-action="Index" class="top-navbar-logo">
                <img src="~/images/logo.svg" alt="Dortage Logo" />
                <span>TOPRAKTAR</span>
            </a>
        </div>
        <div class="top-navbar-right">
            <a asp-controller="Home" asp-action="Index" class="navbar-link">
                <svg viewBox="0 0 24 24">
                    <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
                    <polyline points="9 22 9 12 15 12 15 22"/>
                </svg>
                <span>Anasayfa</span>
            </a>
            <a asp-controller="Proje" asp-action="Index" class="navbar-link">
                <svg viewBox="0 0 24 24">
                    <rect x="3" y="3" width="7" height="7"/>
                    <rect x="14" y="3" width="7" height="7"/>
                    <rect x="14" y="14" width="7" height="7"/>
                    <rect x="3" y="14" width="7" height="7"/>
                </svg>
                <span>Projeler</span>
            </a>
        </div>
    </nav>

    <!-- Mobile Overlay -->
    @* <div class="mobile-overlay" id="mobileOverlay"></div> *@

    <!-- Sidebar -->
    <nav class="sidebar" id="sidebar" role="navigation" aria-label="Ana navigasyon">
        <!-- Collapse Button (Desktop Only) -->
        <button class="collapse-btn" id="collapseBtn" aria-label="Kenar çubuğunu daralt">
            <svg class="collapse-icon" viewBox="0 0 24 24">
                <polyline points="15 18 9 12 15 6"></polyline>
            </svg>
        </button>

        <!-- Mobile Close Button -->
        <button class="mobile-close" id="mobileClose" aria-label="Kapat">
            <svg viewBox="0 0 24 24">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
        </button>

        <!-- User Profile -->
        @{
            var user = await UserManager.GetUserAsync(User);
            var initials = user != null ? $"{user.Ad?.Substring(0, 1)}{user.Soyad?.Substring(0, 1)}" : "??";
            var fullName = user != null ? $"{user.Ad} {user.Soyad}" : "Kullanıcı";
            var isAdmin = User.IsInRole("admin");
            var isTopraktar = User.IsInRole("topraktar");
        }
        <div class="user-profile">
            <div class="user-avatar">@initials</div>
            <div class="user-name">@fullName</div>
            @if (isTopraktar)
            {
                <span class="user-role">Topraktar</span>
            }
            @if (isAdmin)
            {
                <span class="user-role" style="background: rgba(239, 68, 68, 0.2); color: #dc2626;">Admin</span>
            }
            @* <div class="user-code">REF: TRK@(user?.Id.ToString() ?? "N/A")</div> *@
        </div>

        <!-- Navigation Menu -->
        @{
            var context = ViewContext.HttpContext.RequestServices.GetService(typeof(dortageDB.Data.AppDbContext)) as dortageDB.Data.AppDbContext;
            var currentUserId = user?.Id;

            var totalSalesCount = 0;
            var totalCommission = 0m;
            var totalMusteriler = 0;
            var pendingRandevular = 0;

            if (context != null && currentUserId.HasValue)
            {
                // Sadece bu topraktara ait veriler
                totalSalesCount = context.Satislar.Count(s => s.TopraktarID == currentUserId.Value);
                totalCommission = context.Satislar
                .Where(s => s.TopraktarID == currentUserId.Value)
                .Sum(s => (decimal?)s.OdenecekKomisyon) ?? 0;

                // Bu topraktara ait müşteri sayısı
                totalMusteriler = context.Musteriler.Count(m => m.TopraktarID == currentUserId.Value);

                pendingRandevular = context.Randevular
                .Count(r => r.TopraktarID == currentUserId.Value && r.RandevuDurum == dortageDB.Entities.RandevuDurum.OnayBekliyor);
            }
        }

        <ul class="nav-menu">
            <li class="nav-item">
                <a asp-controller="Dashboard" asp-action="Index"
                   class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Dashboard" && ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active" : "")">
                    <svg class="nav-icon" viewBox="0 0 24 24">
                        <rect x="3" y="3" width="7" height="7"></rect>
                        <rect x="14" y="3" width="7" height="7"></rect>
                        <rect x="14" y="14" width="7" height="7"></rect>
                        <rect x="3" y="14" width="7" height="7"></rect>
                    </svg>
                    <span class="nav-text">Dashboard</span>
                    <span class="tooltip">Dashboard</span>
                </a>
            </li>

            <li class="nav-item">
                <a asp-controller="Musteri" asp-action="Index"
                   class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Musteri" ? "active" : "")">
                    <svg class="nav-icon" viewBox="0 0 24 24">
                        <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
                        <circle cx="9" cy="7" r="4"></circle>
                        <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
                        <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                    </svg>
                    <span class="nav-text">Müşterilerim</span>
                    @if (totalMusteriler > 0)
                    {
                        <span class="nav-badge badge-blue">@totalMusteriler</span>
                    }
                    <span class="tooltip">Müşterilerim</span>
                </a>
            </li>

            <li class="nav-item">
                <a asp-controller="Randevu" asp-action="Index"
                   class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Randevu" ? "active" : "")">
                    <svg class="nav-icon" viewBox="0 0 24 24">
                        <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                        <line x1="16" y1="2" x2="16" y2="6"></line>
                        <line x1="8" y1="2" x2="8" y2="6"></line>
                        <line x1="3" y1="10" x2="21" y2="10"></line>
                    </svg>
                    <span class="nav-text">Randevularım</span>
                    @if (pendingRandevular > 0)
                    {
                        <span class="nav-badge badge-orange pulse">@pendingRandevular</span>
                    }
                    <span class="tooltip">Randevularım</span>
                </a>
            </li>

            <li class="nav-item">
                <a asp-controller="Satis" asp-action="Index"
                   class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Satis" ? "active" : "")">
                    <svg class="nav-icon" viewBox="0 0 24 24">
                        <polyline points="22 7 13.5 15.5 8.5 10.5 2 17"></polyline>
                        <polyline points="16 7 22 7 22 13"></polyline>
                    </svg>
                    <span class="nav-text">Satışlarım</span>
                    <span class="tooltip">Satışlarım</span>
                </a>
            </li>

            <li class="nav-item">
                <a asp-controller="Dashboard" asp-action="TopraktarAkademi"
                   class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "TopraktarAkademi" ? "active" : "")">
                    <svg class="nav-icon" viewBox="0 0 24 24">
                        <path d="M22 10v6M2 10l10-5 10 5-10 5z"></path>
                        <path d="M6 12v5c3 3 9 3 12 0v-5"></path>
                    </svg>
                    <span class="nav-text">Topraktar Akademisi</span>
                    <span class="nav-badge badge-blue">%60</span>
                    <span class="tooltip">Topraktar Akademisi</span>
                </a>
            </li>

            @if (isAdmin)
            {
                <li class="nav-item" style="margin-top: 24px; padding-top: 24px; border-top: 1px solid #e5e7eb;">
                    <a asp-controller="Admin" asp-action="Index"
                       class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Admin" ? "active" : "")">
                        <svg class="nav-icon" viewBox="0 0 24 24">
                            <path d="M12 2L2 7l10 5 10-5-10-5z"></path>
                            <path d="M2 17l10 5 10-5M2 12l10 5 10-5"></path>
                        </svg>
                        <span class="nav-text">Admin Panel</span>
                        <span class="nav-badge badge-red">★</span>
                        <span class="tooltip">Admin Panel</span>
                    </a>
                </li>
            }

            <li class="nav-item">
                <a asp-controller="Settings" asp-action="Profile"
                   class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Settings" ? "active" : "")">
                    <svg class="nav-icon" viewBox="0 0 24 24">
                        <circle cx="12" cy="12" r="3"></circle>
                        <path d="M12 1v6m0 6v6m5.2-13.2l-4.2 4.2m0 6l-4.2 4.2M23 12h-6m-6 0H5m13.2 5.2l-4.2-4.2m0-6l-4.2-4.2"></path>
                    </svg>
                    <span class="nav-text">Ayarlar</span>
                    <span class="tooltip">Ayarlar</span>
                </a>
            </li>

            <li class="nav-item">
                <a href="#" class="nav-link">
                    <svg class="nav-icon" viewBox="0 0 24 24">
                        <circle cx="12" cy="12" r="10"></circle>
                        <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                        <line x1="12" y1="17" x2="12.01" y2="17"></line>
                    </svg>
                    <span class="nav-text">Yardım & Destek</span>
                    <span class="tooltip">Yardım & Destek</span>
                </a>
            </li>

            <li class="nav-item">
                <form asp-controller="Account" asp-action="Logout" method="post" style="margin: 0;">
                    <button type="submit" class="nav-link" style="background: none; border: none; width: 100%; text-align: left; cursor: pointer;">
                        <svg class="nav-icon" viewBox="0 0 24 24">
                            <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                            <polyline points="16 17 21 12 16 7"></polyline>
                            <line x1="21" y1="12" x2="9" y2="12"></line>
                        </svg>
                        <span class="nav-text">Çıkış Yap</span>
                        <span class="tooltip">Çıkış Yap</span>
                    </button>
                </form>
            </li>
        </ul>
    </nav>

    <!-- Main Content -->
    <main class="main-content">
        @RenderBody()
    </main>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        // ===================================
        // Sidebar Functionality
        // ===================================
        const sidebar = document.getElementById('sidebar');
        const collapseBtn = document.getElementById('collapseBtn');
        const mobileOverlay = document.getElementById('mobileOverlay');
        const mobileClose = document.getElementById('mobileClose');
        const mobileMenuBtn = document.getElementById('mobileMenuBtn');
        const navLinks = document.querySelectorAll('.nav-link');

        // Collapse/Expand Sidebar (Desktop)
        if (collapseBtn) {
            collapseBtn.addEventListener('click', () => {
                if (window.innerWidth > 768) {
                    sidebar.classList.toggle('collapsed');
                    const isCollapsed = sidebar.classList.contains('collapsed');
                    localStorage.setItem('sidebarCollapsed', isCollapsed);
                }
            });
        }

        // Load saved state
        window.addEventListener('DOMContentLoaded', () => {
            if (window.innerWidth > 768) {
                const isCollapsed = localStorage.getItem('sidebarCollapsed') === 'true';
                if (isCollapsed) {
                    sidebar.classList.add('collapsed');
                }
            }

            // Auto-hide alerts after 5 seconds
            setTimeout(() => {
                const alerts = document.querySelectorAll('.alert');
                alerts.forEach(alert => {
                    alert.style.transition = 'opacity 0.3s';
                    alert.style.opacity = '0';
                    setTimeout(() => alert.remove(), 300);
                });
            }, 5000);
        });

        // Mobile Menu Toggle
        function toggleMobileMenu() {
            sidebar.classList.toggle('mobile-open');
            mobileOverlay.classList.toggle('active');
            document.body.style.overflow = sidebar.classList.contains('mobile-open') ? 'hidden' : '';
        }

        if (mobileMenuBtn) {
            mobileMenuBtn.addEventListener('click', toggleMobileMenu);
        }

        if (mobileOverlay) {
            mobileOverlay.addEventListener('click', toggleMobileMenu);
        }

        if (mobileClose) {
            mobileClose.addEventListener('click', toggleMobileMenu);
        }

        // Close mobile menu on link click
        navLinks.forEach(link => {
            link.addEventListener('click', () => {
                if (window.innerWidth <= 768 && sidebar.classList.contains('mobile-open')) {
                    toggleMobileMenu();
                }
            });
        });

        // Responsive handling
        let previousWidth = window.innerWidth;
        window.addEventListener('resize', () => {
            const currentWidth = window.innerWidth;
            if (previousWidth <= 768 && currentWidth > 768) {
                sidebar.classList.remove('mobile-open');
                mobileOverlay.classList.remove('active');
                document.body.style.overflow = '';
                const isCollapsed = localStorage.getItem('sidebarCollapsed') === 'true';
                if (isCollapsed) {
                    sidebar.classList.add('collapsed');
                }
            }
            if (previousWidth > 768 && currentWidth <= 768) {
                sidebar.classList.remove('collapsed');
                sidebar.classList.remove('mobile-open');
                mobileOverlay.classList.remove('active');
                document.body.style.overflow = '';
            }
            previousWidth = currentWidth;
        });

        // ===================================
        // Page Loading Indicator
        // ===================================
        const pageLoading = document.getElementById('pageLoading');

        // Function to hide loading
        function hideLoading() {
            pageLoading?.classList.remove('active');
        }

        // Show loading on form submissions
        document.addEventListener('submit', function(e) {
            if (!e.target.hasAttribute('data-no-loading')) {
                pageLoading?.classList.add('active');
            }
        });

        // Show loading on navigation links (except same page links and external links)
        document.querySelectorAll('a[href]').forEach(link => {
            link.addEventListener('click', function(e) {
                const href = this.getAttribute('href');
                const target = this.getAttribute('target');

                // Don't show loading for:
                // - Hash links (#)
                // - JavaScript links
                // - External links (target="_blank")
                // - Links with data-no-loading attribute
                if (href &&
                    !href.startsWith('#') &&
                    !href.startsWith('javascript:') &&
                    target !== '_blank' &&
                    !this.hasAttribute('data-no-loading')) {
                    pageLoading?.classList.add('active');
                }
            });
        });

        // Hide loading when page is fully loaded (multiple fallbacks)
        window.addEventListener('load', hideLoading);
        window.addEventListener('DOMContentLoaded', hideLoading);
        window.addEventListener('pageshow', hideLoading);

        // Fallback: Force hide after 3 seconds if still showing
        setTimeout(hideLoading, 3000);
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>